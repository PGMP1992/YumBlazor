@page "/Product"
@using System.Globalization
@using Microsoft.AspNetCore.Authorization
@inject IProductRepos _productRepos
@inject IJSRuntime _JS
@attribute [Authorize]

<BsModal OnModalConfirmation="ConfirmDelete_click"
    ButtonStyle="btn-danger"
    ButtonText="Delete"
    Title="Are you sure you want to Delete this Product?"
></BsModal>

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center justify-content-center">
        <img src="./images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2 mb-0">Product List</h2>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="row pb-3 align-items-center">
                <div class="col-md-6">
                    <input class="form-control" placeholder="Search by name or tag..." @oninput="OnSearchChanged" />
                </div>
                <div class="col-md-6 text-end">
                    <a href="Product/create" class="btn btn-primary" style="width:120px">
                        <i class="bi bi-plus-square"></i> New
                    </a>
                </div>
            </div>

            @if (FilteredProducts.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-primary">
                            <tr>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Special Tag</th>
                                <th>Category</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in FilteredProducts)
                            {
                                <tr>
                                    <td style="width:70px">
                                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                                        {
                                            <img src="@item.ImageUrl" alt="Product" class="img-thumbnail" style="max-width:60px;max-height:60px;" />
                                        }
                                        else
                                        {
                                            <span class="text-muted small">No Image</span>
                                        }
                                    </td>
                                    <td>@item.Name</td>
                                    <td>@item.Price.ToString("C")</td>
                                    <td>
                                        @if (!string.IsNullOrWhiteSpace(item.Tag))
                                        {
                                            <span class="badge bg-info text-dark">@item.Tag</span>
                                        }
                                    </td>
                                    <td>@item.Category?.Name</td>
                                    <td class="text-end">
                                        <a href="@($"/Product/update/{item.Id}")" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                        <button class="btn btn-sm btn-outline-danger" title="Delete" @onclick="() => HandleDelete(item.Id)">
                                            <i class="bi bi-trash3"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center mt-4">
                    <i class="bi bi-info-circle"></i> No products found.
                </div>
            }
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Product> Products { get; set; } = Enumerable.Empty<Product>();
    private IEnumerable<Product> FilteredProducts => string.IsNullOrWhiteSpace(SearchTerm)
        ? Products
        : Products.Where(p =>
            (!string.IsNullOrEmpty(p.Name) && p.Name.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase)) ||
            (!string.IsNullOrEmpty(p.Tag) && p.Tag.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase))
        );
    private int DeleteProductId { get; set; } = 0;
    private string SearchTerm { get; set; } = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadProducts();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadProducts()
    {
        Products = await _productRepos.GetAllAsync();
    }

    private void HandleDelete(int id)
    {
        DeleteProductId = id;
        _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_click(bool isConfirmed)
    {
        IsProcessing = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal");

        if (isConfirmed && DeleteProductId != 0)
        {
            var result = await _productRepos.DeleteAsync(DeleteProductId);
            if (result)
                _JS?.ToastrSuccess("Product Deleted");
            else
                _JS?.ToastrError("Error while trying to Delete.");

            await LoadProducts();
        }
        DeleteProductId = 0;
        IsProcessing = false;
    }

    private void OnSearchChanged(ChangeEventArgs e)
    {
        SearchTerm = e.Value?.ToString() ?? "";
    }
}