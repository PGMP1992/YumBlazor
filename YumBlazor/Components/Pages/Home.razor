@page "/"
@using System.Globalization
@inject IProductRepos _prodRepos
@inject ICategoryRepos _catRepos
@inject IShoppingCartRepos _cartRepos
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject IJSRuntime _JS
@inject ICommon _Common
@inject NavigationManager _NavigationManager

<PageTitle>Home</PageTitle>

@if (isProcessing)
{
    <div class="position-absolute w-100 vh-100 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="container-fluid px-0 m-0 full-width">
        <div class="jumbotron-custom">
            <div class="m-auto d-flex align-items-center" style="width: 400px; height: 50vh;">

                <div class="d-flex align-items-center" style="width: 100%;">
                    <input type="text" class="form-control rounded-pill"
                    @bind:event="oninput" @bind:get="_searchText" @bind:set="FilterByName"
                    placeholder="Search for Food Items!"
                    style="width: 100%; padding: 20px;">
                    <span style="position: relative; left: -43px;"><i class="bi bi-search"></i></span>
                </div>
            </div>
        </div>

        <div class="content px-4 m-2">
            <ul class="nav nav-underline justify-content-center mb-2">
                <li class="nav-item">
                    <span class="nav-link @GetActiveTab(0)" href="#" style="cursor: pointer" @onclick="()=>FilterProducts(0)">All</span>
                </li>
                @foreach (var cat in Categories)
                {
                    <li class="nav-item">
                        <span class="nav-link @GetActiveTab(cat.Id)" 
                        href="#" style="cursor: pointer" @onclick="()=>FilterProducts(cat.Id)">@cat.Name</span>
                    </li>
                }
            </ul>
            <div class="row mt-4 mx-1">
                @foreach( var prod in FilteredProducts) { 
                    <div class="col-12 col-md-6 col-lg-4 pe-3 mb-5">
                        <div class="card">
                            <div class="mt-3 mb-2 row">
                                <div class="col-6 px-3">
                                    @if( ! string.IsNullOrEmpty(prod.Tag)) {
                                        <i class="bi bi-star btn btn-outline-success disabled"> @prod.Tag</i>
                                    }
                                </div>
                                <div class="col-6 text-end text-danger px-3 h3">
                                    @prod.Price.ToString("C", CultureInfo.GetCultureInfo("se-SE"))
                                </div>
                            </div>
                            <div class="text-center">
                                @if (!string.IsNullOrEmpty(prod.ImageUrl))
                                {
                                    <img class="card-img-top img-thumbnail img-rounded w-50 mt-2" src="@prod.ImageUrl" style="">
                                } else {
                                    <img class="card-img-top img-thumbnail img-rounded w-50 mt-2" src="images/default.png" style="">
                                }

                            </div>
                            <div class="card-body">
                                <h5 class="card-title text-center lead text-success">@prod.Name</h5>
                                <p class="card-text mt-2">@((MarkupString)@prod.Description)</p>
                                
                                    <div class="m-lg-auto p-2" @onclick="()=>AddOrderItem(prod)">
                                        <i class="bi bi-cart3 btn btn-success text-right px-5">
                                            Add to cart</i>
                                    </div>
                                
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    private IEnumerable<Product> Products = new List<Product>();

    private IEnumerable<Category> Categories = new List<Category>();

    private IEnumerable<Product> FilteredProducts = new List<Product>();

    private bool isProcessing { get; set; } = true;
    private int _selectedCategoryId = 0;
    private string _searchText = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await LoadProducts();
            isProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadProducts()
    {
        Products = await _prodRepos.GetAllAsync();
        Categories = await _catRepos.GetAllAsync();
        FilterProducts(0);
    }

    private void FilterProducts(int catId)
    {
        if (catId == 0)
        {
            FilteredProducts = Products;
            _selectedCategoryId = catId;
            return;
        } else {
            FilteredProducts = Products.Where(u => u.CategoryId == catId).ToList();
            _selectedCategoryId = catId;
            _searchText = String.Empty;
        }
    }

    private void FilterByName(string text)
    {
        if(string.IsNullOrWhiteSpace(text))
        {
            FilteredProducts = Products;
        } else
        {
            FilteredProducts = Products
                .Where( u => u.Name.Contains(text, StringComparison.InvariantCultureIgnoreCase)).ToList();
        }
        _searchText = text;
    }

    private string GetActiveTab( int catId)
    {
        return catId == _selectedCategoryId ? "active" : string.Empty;
    }

    private async Task AddOrderItem(Product prod)
    {
        if (! await _Common.IsUserAuthenticated())
        {
            _NavigationManager.NavigateTo("account/login");               
        } 
        else
        {
            // Add Item to Cart
            var result = await _cartRepos.UpdateCartAsync(await _Common.GetUserId(), prod.Id, 1);

            if(result)
            {
                _JS?.ToastrSuccess("Product added to Cart");
            } else
            {
                _JS?.ToastrError("Something went wrong");
            }

        }
    }
}