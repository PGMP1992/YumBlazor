@* Customer Menu *@
@using YumBlazor.Services
@inject SharedStateService _sharedStateService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject IShoppingCartRepos _shoppingCartRepos

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark border-bottom box-shadow">
	<div class="container-fluid">
		<a class="navbar-brand" href="">
			<img src="/images/Logo.png" alt="Bootstrap" width="30" height="24">
			Yumm
		</a>

		<button class="navbar-toggler mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
			aria-controls="navbarCollapse" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>

		<div class="collapse navbar-collapse" id="navbarCollapse">
			<ul class="navbar-nav me-auto mb-2 mb-md-0">
				<li class="nav-item mx-2">
					<NavLink class="nav-link text-light" href="/" Match="NavLinkMatch.All">
						<span class="bi bi-house-door" aria-hidden="true">
							Home
						</span>
					</NavLink>
				</li>
				<li class="nav-item mx-2">
					<NavLink class="nav-link text-light" href="/cart">
						<span class="bi bi-cart3" aria-hidden="true">
							(@_sharedStateService.CartCount)
						</span>
						
					</NavLink>
				</li>
				<li class="nav-item mx-2">
					<NavLink class="nav-link text-light" href="/order/list">
						<span class="bi bi-card-list" aria-hidden="true">
							Orders
						</span>
					</NavLink>
				</li>

				@* App Info ----------------------*@ 
				<li class="nav-item mx-2">
					<NavLink class="nav-link text-danger" style="cursor: pointer;" id="info" data-bs-toggle="modal" data-bs-target="#infoModal">
						<span class="bi bi-info-circle-fill" aria-hidden="true">
							App Info
						</span>
												
					</NavLink>
				</li>
			</ul>

			<ul class="d-flex navbar-nav mb-2 mb-md-0">
				<AuthorizeView>
					<Authorized>
						<li class="nav-item">
							<button class="nav-link active me-2" style="cursor: pointer; background: transparent; border: 0px;">
								Welcome, @context?.User?.Identity?.Name
							</button>
						</li>
						<li class="nav-item">
							<form action="Account/Logout" method="post">
								<AntiforgeryToken />
								<input type="hidden" name="ReturnUrl" value="" />
								<button type="submit" class="nav-link btn btn-success text-white p-2">
									<span class="nav-menu" aria-hidden="true"></span> Logout
								</button>
							</form>
						</li>
					</Authorized>
					<NotAuthorized>
						<li class="nav-item">
							<NavLink class="nav-link text-light" href="Account/Register">
								<span class="bi bi-person-nav-menu" aria-hidden="true">
									Register
								</span> 
							</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link text-light btn btn-success" href="Account/Login">
								<span class="bi bi-person-badge-nav-menu text-white" aria-hidden="true">
									Login</span>
							</NavLink>
						</li>
						
					</NotAuthorized>
				</AuthorizeView>
				
			</ul>
		</div>
	</div>
</nav>


@code {

	protected override void OnInitialized()
	{
		_sharedStateService.OnChange += OnSharedStateChange;
		GetInitialCount();
	}

	private void OnSharedStateChange()
	{
		InvokeAsync(StateHasChanged);	
	}

	private async Task GetInitialCount()
	{
		var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;

		_sharedStateService.CartCount =
			await _shoppingCartRepos.GetTotalCartAsync(user?.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value);
	}

	public void Dispose()
	{
		_sharedStateService.OnChange -= OnSharedStateChange;
	}
}